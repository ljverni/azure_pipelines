name: CI/CD 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ci_job:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f venv/requirements_main.txt ]; then pip install -r venv/requirements_main.txt; fi
    - name: Test with pytest
      run: |
        python -m pytest

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
  cd_job:
    runs-on: ubuntu-latest
    needs: [ci_job]

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Checkout Sourcecode
        uses: actions/checkout@v2 
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f venv/requirements_main.txt ]; then pip install -r venv/requirements_main.txt; fi
      - name: Create Inbount SSH rule
        run: |
          set -eu
          RunnerIP=$(curl -s https://api.ipify.org/)
          python3 src/utilities/azure_security_group.py create CaratacoPipelinesRG ProdSG AllowGitHubSSHInbound $RunnerIP
          sleep 180s
      - name: Pull Request
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export PYTHONPATH=:/home/caratacoprod/projects/pipelines
            cd projects/pipelines
            git fetch --all
            git reset --hard origin/main
            cd venv
            if [ ! -d "main" ]; then python3 -m venv main; fi
            if [ ! -d "dbt" ]; then python3 -m venv dbt; fi
            source main/bin/activate && pip install -r requirements_main.txt
            source dbt/bin/activate && pip install -r requirements_dbt.txt
      - name: Delete Inbount SSH rule
        run: |
          python3 src/utilities/azure_security_group.py delete CaratacoPipelinesRG ProdSG AllowGitHubSSHInbound
